module
	- module
	- value
	- routine
		- value
		- label
		- routine


label	: `.` identifier
routine	: `.` identifier `:` [expression] [scope]

module	: identifier `:` scope
value	: identifier (`:` expression [(`=` | `:`) expression] | [`:` expression] (`=` | `:`) expression)

external_module:
{
	value: uint32;

	.get_value: () uint32 {
		return 'value;
	}

	.set_value: (new_value: uint32 = 0) {
		'value = new_value;
	}
}

cool_module:
{
	external_module := external_module;

	foo: [value: uint32];
	bar: [value: sint64];

	.make_bar_from_foo: (foo: foo) bar {
		return foo;
	}

	g_foo: foo = [7];
	g_bar: bar = ['value = -7];
}
